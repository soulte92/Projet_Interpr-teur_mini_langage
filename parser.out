Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement SEMICOLON
Rule 3     bloc -> statement SEMICOLON
Rule 4     statement -> PRINT LPAREN multiExpr RPAREN
Rule 5     statement -> PRINT LPAREN callValue RPAREN
Rule 6     statement -> NAME AFFECT expression
Rule 7     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 8     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
Rule 9     statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 10    statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
Rule 11    multiname -> NAME VIRG multiname
Rule 12    multiname -> NAME
Rule 13    multiExpr -> expression VIRG multiExpr
Rule 14    multiExpr -> expression
Rule 15    statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
Rule 16    statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
Rule 17    statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
Rule 18    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
Rule 19    statement -> NAME LPAREN RPAREN
Rule 20    statement -> NAME LPAREN multiExpr RPAREN
Rule 21    callValue -> NAME LPAREN RPAREN
Rule 22    callValue -> NAME LPAREN multiExpr RPAREN
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression TIMES expression
Rule 25    expression -> expression MINUS expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> expression AND expression
Rule 28    expression -> expression OR expression
Rule 29    expression -> expression INF expression
Rule 30    expression -> expression SUP expression
Rule 31    expression -> expression EQUALS expression
Rule 32    expression -> LPAREN expression RPAREN
Rule 33    expression -> NUMBER
Rule 34    expression -> NAME
Rule 35    expression -> GUILLEMET NAME GUILLEMET
Rule 36    expression -> TRUE
Rule 37    expression -> FALSE

Terminals, with rules where they appear

AFFECT               : 6
AND                  : 27
DIVIDE               : 26
ELSE                 : 8
EQUALS               : 31
FALSE                : 37
FOR                  : 10
FUNCTIONVALUE        : 17 18
FUNCTIONVOID         : 15 16
GUILLEMET            : 35 35
IF                   : 7 8
INF                  : 29
LACCOLADE            : 7 8 8 9 10 15 16 17 18
LPAREN               : 4 5 7 8 9 10 15 16 17 18 19 20 21 22 32
MINUS                : 25
NAME                 : 6 11 12 15 16 17 18 19 20 21 22 34 35
NUMBER               : 33
OR                   : 28
PLUS                 : 23
PRINT                : 4 5
RACCOLADE            : 7 8 8 9 10 15 16 17 18
RETURN               : 17 18
RPAREN               : 4 5 7 8 9 10 15 16 17 18 19 20 21 22 32
SEMICOLON            : 2 3 10 10 17 18
SUP                  : 30
TIMES                : 24
TRUE                 : 36
VIRG                 : 11 13
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 7 8 8 9 10 15 16 17 18
callValue            : 5
expression           : 6 7 8 9 10 13 14 17 18 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32
multiExpr            : 4 13 20 22
multiname            : 11 16 18
start                : 0
statement            : 2 3 10 10

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    $end            reduce using rule 1 (start -> bloc .)
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement . SEMICOLON

    SEMICOLON       shift and go to state 12


state 4

    (4) statement -> PRINT . LPAREN multiExpr RPAREN
    (5) statement -> PRINT . LPAREN callValue RPAREN

    LPAREN          shift and go to state 13


state 5

    (6) statement -> NAME . AFFECT expression
    (19) statement -> NAME . LPAREN RPAREN
    (20) statement -> NAME . LPAREN multiExpr RPAREN

    AFFECT          shift and go to state 14
    LPAREN          shift and go to state 15


state 6

    (7) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 16


state 7

    (9) statement -> WHILE . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 17


state 8

    (10) statement -> FOR . LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 18


state 9

    (15) statement -> FUNCTIONVOID . NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> FUNCTIONVOID . NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 19


state 10

    (17) statement -> FUNCTIONVALUE . NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE

    NAME            shift and go to state 20


state 11

    (2) bloc -> bloc statement . SEMICOLON

    SEMICOLON       shift and go to state 21


state 12

    (3) bloc -> statement SEMICOLON .

    PRINT           reduce using rule 3 (bloc -> statement SEMICOLON .)
    NAME            reduce using rule 3 (bloc -> statement SEMICOLON .)
    IF              reduce using rule 3 (bloc -> statement SEMICOLON .)
    WHILE           reduce using rule 3 (bloc -> statement SEMICOLON .)
    FOR             reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTIONVOID    reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTIONVALUE   reduce using rule 3 (bloc -> statement SEMICOLON .)
    $end            reduce using rule 3 (bloc -> statement SEMICOLON .)
    RACCOLADE       reduce using rule 3 (bloc -> statement SEMICOLON .)
    RETURN          reduce using rule 3 (bloc -> statement SEMICOLON .)


state 13

    (4) statement -> PRINT LPAREN . multiExpr RPAREN
    (5) statement -> PRINT LPAREN . callValue RPAREN
    (13) multiExpr -> . expression VIRG multiExpr
    (14) multiExpr -> . expression
    (21) callValue -> . NAME LPAREN RPAREN
    (22) callValue -> . NAME LPAREN multiExpr RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    NAME            shift and go to state 26
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    multiExpr                      shift and go to state 23
    callValue                      shift and go to state 24
    expression                     shift and go to state 25

state 14

    (6) statement -> NAME AFFECT . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 32

state 15

    (19) statement -> NAME LPAREN . RPAREN
    (20) statement -> NAME LPAREN . multiExpr RPAREN
    (13) multiExpr -> . expression VIRG multiExpr
    (14) multiExpr -> . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    RPAREN          shift and go to state 33
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    multiExpr                      shift and go to state 34
    expression                     shift and go to state 25

state 16

    (7) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 35

state 17

    (9) statement -> WHILE LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 36

state 18

    (10) statement -> FOR LPAREN . statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 37

state 19

    (15) statement -> FUNCTIONVOID NAME . LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> FUNCTIONVOID NAME . LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 38


state 20

    (17) statement -> FUNCTIONVALUE NAME . LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE

    LPAREN          shift and go to state 39


state 21

    (2) bloc -> bloc statement SEMICOLON .

    PRINT           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    NAME            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    IF              reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    WHILE           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FOR             reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTIONVOID    reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTIONVALUE   reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    $end            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    RACCOLADE       reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    RETURN          reduce using rule 2 (bloc -> bloc statement SEMICOLON .)


state 22

    (32) expression -> LPAREN . expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 40

state 23

    (4) statement -> PRINT LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 41


state 24

    (5) statement -> PRINT LPAREN callValue . RPAREN

    RPAREN          shift and go to state 42


state 25

    (13) multiExpr -> expression . VIRG multiExpr
    (14) multiExpr -> expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    VIRG            shift and go to state 43
    RPAREN          reduce using rule 14 (multiExpr -> expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 26

    (21) callValue -> NAME . LPAREN RPAREN
    (22) callValue -> NAME . LPAREN multiExpr RPAREN
    (34) expression -> NAME .

    LPAREN          shift and go to state 53
    VIRG            reduce using rule 34 (expression -> NAME .)
    PLUS            reduce using rule 34 (expression -> NAME .)
    TIMES           reduce using rule 34 (expression -> NAME .)
    MINUS           reduce using rule 34 (expression -> NAME .)
    DIVIDE          reduce using rule 34 (expression -> NAME .)
    AND             reduce using rule 34 (expression -> NAME .)
    OR              reduce using rule 34 (expression -> NAME .)
    INF             reduce using rule 34 (expression -> NAME .)
    SUP             reduce using rule 34 (expression -> NAME .)
    EQUALS          reduce using rule 34 (expression -> NAME .)
    RPAREN          reduce using rule 34 (expression -> NAME .)


state 27

    (33) expression -> NUMBER .

    VIRG            reduce using rule 33 (expression -> NUMBER .)
    PLUS            reduce using rule 33 (expression -> NUMBER .)
    TIMES           reduce using rule 33 (expression -> NUMBER .)
    MINUS           reduce using rule 33 (expression -> NUMBER .)
    DIVIDE          reduce using rule 33 (expression -> NUMBER .)
    AND             reduce using rule 33 (expression -> NUMBER .)
    OR              reduce using rule 33 (expression -> NUMBER .)
    INF             reduce using rule 33 (expression -> NUMBER .)
    SUP             reduce using rule 33 (expression -> NUMBER .)
    EQUALS          reduce using rule 33 (expression -> NUMBER .)
    RPAREN          reduce using rule 33 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 33 (expression -> NUMBER .)


state 28

    (35) expression -> GUILLEMET . NAME GUILLEMET

    NAME            shift and go to state 54


state 29

    (36) expression -> TRUE .

    VIRG            reduce using rule 36 (expression -> TRUE .)
    PLUS            reduce using rule 36 (expression -> TRUE .)
    TIMES           reduce using rule 36 (expression -> TRUE .)
    MINUS           reduce using rule 36 (expression -> TRUE .)
    DIVIDE          reduce using rule 36 (expression -> TRUE .)
    AND             reduce using rule 36 (expression -> TRUE .)
    OR              reduce using rule 36 (expression -> TRUE .)
    INF             reduce using rule 36 (expression -> TRUE .)
    SUP             reduce using rule 36 (expression -> TRUE .)
    EQUALS          reduce using rule 36 (expression -> TRUE .)
    RPAREN          reduce using rule 36 (expression -> TRUE .)
    SEMICOLON       reduce using rule 36 (expression -> TRUE .)


state 30

    (37) expression -> FALSE .

    VIRG            reduce using rule 37 (expression -> FALSE .)
    PLUS            reduce using rule 37 (expression -> FALSE .)
    TIMES           reduce using rule 37 (expression -> FALSE .)
    MINUS           reduce using rule 37 (expression -> FALSE .)
    DIVIDE          reduce using rule 37 (expression -> FALSE .)
    AND             reduce using rule 37 (expression -> FALSE .)
    OR              reduce using rule 37 (expression -> FALSE .)
    INF             reduce using rule 37 (expression -> FALSE .)
    SUP             reduce using rule 37 (expression -> FALSE .)
    EQUALS          reduce using rule 37 (expression -> FALSE .)
    RPAREN          reduce using rule 37 (expression -> FALSE .)
    SEMICOLON       reduce using rule 37 (expression -> FALSE .)


state 31

    (34) expression -> NAME .

    PLUS            reduce using rule 34 (expression -> NAME .)
    TIMES           reduce using rule 34 (expression -> NAME .)
    MINUS           reduce using rule 34 (expression -> NAME .)
    DIVIDE          reduce using rule 34 (expression -> NAME .)
    AND             reduce using rule 34 (expression -> NAME .)
    OR              reduce using rule 34 (expression -> NAME .)
    INF             reduce using rule 34 (expression -> NAME .)
    SUP             reduce using rule 34 (expression -> NAME .)
    EQUALS          reduce using rule 34 (expression -> NAME .)
    SEMICOLON       reduce using rule 34 (expression -> NAME .)
    RPAREN          reduce using rule 34 (expression -> NAME .)
    VIRG            reduce using rule 34 (expression -> NAME .)


state 32

    (6) statement -> NAME AFFECT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    SEMICOLON       reduce using rule 6 (statement -> NAME AFFECT expression .)
    RPAREN          reduce using rule 6 (statement -> NAME AFFECT expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 33

    (19) statement -> NAME LPAREN RPAREN .

    SEMICOLON       reduce using rule 19 (statement -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 19 (statement -> NAME LPAREN RPAREN .)


state 34

    (20) statement -> NAME LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 55


state 35

    (7) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 36

    (9) statement -> WHILE LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 57
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 37

    (10) statement -> FOR LPAREN statement . SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE

    SEMICOLON       shift and go to state 58


state 38

    (15) statement -> FUNCTIONVOID NAME LPAREN . RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> FUNCTIONVOID NAME LPAREN . multiname RPAREN LACCOLADE bloc RACCOLADE
    (11) multiname -> . NAME VIRG multiname
    (12) multiname -> . NAME

    RPAREN          shift and go to state 60
    NAME            shift and go to state 59

    multiname                      shift and go to state 61

state 39

    (17) statement -> FUNCTIONVALUE NAME LPAREN . RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (11) multiname -> . NAME VIRG multiname
    (12) multiname -> . NAME

    RPAREN          shift and go to state 62
    NAME            shift and go to state 59

    multiname                      shift and go to state 63

state 40

    (32) expression -> LPAREN expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 64
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 41

    (4) statement -> PRINT LPAREN multiExpr RPAREN .

    SEMICOLON       reduce using rule 4 (statement -> PRINT LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 4 (statement -> PRINT LPAREN multiExpr RPAREN .)


state 42

    (5) statement -> PRINT LPAREN callValue RPAREN .

    SEMICOLON       reduce using rule 5 (statement -> PRINT LPAREN callValue RPAREN .)
    RPAREN          reduce using rule 5 (statement -> PRINT LPAREN callValue RPAREN .)


state 43

    (13) multiExpr -> expression VIRG . multiExpr
    (13) multiExpr -> . expression VIRG multiExpr
    (14) multiExpr -> . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 25
    multiExpr                      shift and go to state 65

state 44

    (23) expression -> expression PLUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 66

state 45

    (24) expression -> expression TIMES . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 67

state 46

    (25) expression -> expression MINUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 68

state 47

    (26) expression -> expression DIVIDE . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 69

state 48

    (27) expression -> expression AND . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 70

state 49

    (28) expression -> expression OR . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 71

state 50

    (29) expression -> expression INF . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 72

state 51

    (30) expression -> expression SUP . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 73

state 52

    (31) expression -> expression EQUALS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 74

state 53

    (21) callValue -> NAME LPAREN . RPAREN
    (22) callValue -> NAME LPAREN . multiExpr RPAREN
    (13) multiExpr -> . expression VIRG multiExpr
    (14) multiExpr -> . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    RPAREN          shift and go to state 75
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    multiExpr                      shift and go to state 76
    expression                     shift and go to state 25

state 54

    (35) expression -> GUILLEMET NAME . GUILLEMET

    GUILLEMET       shift and go to state 77


state 55

    (20) statement -> NAME LPAREN multiExpr RPAREN .

    SEMICOLON       reduce using rule 20 (statement -> NAME LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 20 (statement -> NAME LPAREN multiExpr RPAREN .)


state 56

    (7) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE
    (8) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 78


state 57

    (9) statement -> WHILE LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 79


state 58

    (10) statement -> FOR LPAREN statement SEMICOLON . expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 80

state 59

    (11) multiname -> NAME . VIRG multiname
    (12) multiname -> NAME .

    VIRG            shift and go to state 81
    RPAREN          reduce using rule 12 (multiname -> NAME .)


state 60

    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 82


state 61

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 83


state 62

    (17) statement -> FUNCTIONVALUE NAME LPAREN RPAREN . LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE

    LACCOLADE       shift and go to state 84


state 63

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE

    RPAREN          shift and go to state 85


state 64

    (32) expression -> LPAREN expression RPAREN .

    VIRG            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 32 (expression -> LPAREN expression RPAREN .)


state 65

    (13) multiExpr -> expression VIRG multiExpr .

    RPAREN          reduce using rule 13 (multiExpr -> expression VIRG multiExpr .)


state 66

    (23) expression -> expression PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    VIRG            reduce using rule 23 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    AND             reduce using rule 23 (expression -> expression PLUS expression .)
    OR              reduce using rule 23 (expression -> expression PLUS expression .)
    INF             reduce using rule 23 (expression -> expression PLUS expression .)
    SUP             reduce using rule 23 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 23 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 46 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]


state 67

    (24) expression -> expression TIMES expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    VIRG            reduce using rule 24 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 24 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 24 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 24 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 24 (expression -> expression TIMES expression .)
    AND             reduce using rule 24 (expression -> expression TIMES expression .)
    OR              reduce using rule 24 (expression -> expression TIMES expression .)
    INF             reduce using rule 24 (expression -> expression TIMES expression .)
    SUP             reduce using rule 24 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 24 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 24 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]


state 68

    (25) expression -> expression MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    VIRG            reduce using rule 25 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 25 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MINUS expression .)
    AND             reduce using rule 25 (expression -> expression MINUS expression .)
    OR              reduce using rule 25 (expression -> expression MINUS expression .)
    INF             reduce using rule 25 (expression -> expression MINUS expression .)
    SUP             reduce using rule 25 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 25 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 46 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]


state 69

    (26) expression -> expression DIVIDE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    VIRG            reduce using rule 26 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 26 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 26 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 26 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 26 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 26 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 26 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! INF             [ shift and go to state 50 ]
  ! SUP             [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]


state 70

    (27) expression -> expression AND expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 27 (expression -> expression AND expression .)
    RPAREN          reduce using rule 27 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression AND expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52

  ! PLUS            [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 27 (expression -> expression AND expression .) ]


state 71

    (28) expression -> expression OR expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 28 (expression -> expression OR expression .)
    RPAREN          reduce using rule 28 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression OR expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52

  ! PLUS            [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 28 (expression -> expression OR expression .) ]


state 72

    (29) expression -> expression INF expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 29 (expression -> expression INF expression .)
    RPAREN          reduce using rule 29 (expression -> expression INF expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression INF expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52

  ! PLUS            [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! INF             [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! SUP             [ reduce using rule 29 (expression -> expression INF expression .) ]
  ! EQUALS          [ reduce using rule 29 (expression -> expression INF expression .) ]


state 73

    (30) expression -> expression SUP expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 30 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 30 (expression -> expression SUP expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression SUP expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52

  ! PLUS            [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! INF             [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 30 (expression -> expression SUP expression .) ]
  ! EQUALS          [ reduce using rule 30 (expression -> expression SUP expression .) ]


state 74

    (31) expression -> expression EQUALS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 31 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 31 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52

  ! PLUS            [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! INF             [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! SUP             [ reduce using rule 31 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 31 (expression -> expression EQUALS expression .) ]


state 75

    (21) callValue -> NAME LPAREN RPAREN .

    RPAREN          reduce using rule 21 (callValue -> NAME LPAREN RPAREN .)


state 76

    (22) callValue -> NAME LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 86


state 77

    (35) expression -> GUILLEMET NAME GUILLEMET .

    VIRG            reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    PLUS            reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    TIMES           reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    MINUS           reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    DIVIDE          reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    AND             reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    OR              reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    INF             reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    SUP             reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    EQUALS          reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    RPAREN          reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)
    SEMICOLON       reduce using rule 35 (expression -> GUILLEMET NAME GUILLEMET .)


state 78

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (8) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 87
    statement                      shift and go to state 3

state 79

    (9) statement -> WHILE LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 88
    statement                      shift and go to state 3

state 80

    (10) statement -> FOR LPAREN statement SEMICOLON expression . SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 89
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 81

    (11) multiname -> NAME VIRG . multiname
    (11) multiname -> . NAME VIRG multiname
    (12) multiname -> . NAME

    NAME            shift and go to state 59

    multiname                      shift and go to state 90

state 82

    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 91
    statement                      shift and go to state 3

state 83

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 92


state 84

    (17) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE . bloc RETURN expression SEMICOLON RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 93
    statement                      shift and go to state 3

state 85

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE

    LACCOLADE       shift and go to state 94


state 86

    (22) callValue -> NAME LPAREN multiExpr RPAREN .

    RPAREN          reduce using rule 22 (callValue -> NAME LPAREN multiExpr RPAREN .)


state 87

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 95
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 88

    (9) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 96
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 89

    (10) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON . statement RPAREN LACCOLADE bloc RACCOLADE
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 97

state 90

    (11) multiname -> NAME VIRG multiname .

    RPAREN          reduce using rule 11 (multiname -> NAME VIRG multiname .)


state 91

    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 98
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 92

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 99
    statement                      shift and go to state 3

state 93

    (17) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc . RETURN expression SEMICOLON RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 100
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 94

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . bloc RETURN expression SEMICOLON RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 101
    statement                      shift and go to state 3

state 95

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .
    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE . ELSE LACCOLADE bloc RACCOLADE

    SEMICOLON       reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    ELSE            shift and go to state 102


state 96

    (9) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 97

    (10) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 103


state 98

    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 15 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 15 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)


state 99

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 104
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 100

    (17) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN . expression SEMICOLON RACCOLADE
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 105

state 101

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc . RETURN expression SEMICOLON RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 106
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 102

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 107


state 103

    (10) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 108


state 104

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 16 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 16 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .)


state 105

    (17) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression . SEMICOLON RACCOLADE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 109
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 106

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN . expression SEMICOLON RACCOLADE
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . expression INF expression
    (30) expression -> . expression SUP expression
    (31) expression -> . expression EQUALS expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . NAME
    (35) expression -> . GUILLEMET NAME GUILLEMET
    (36) expression -> . TRUE
    (37) expression -> . FALSE

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 27
    NAME            shift and go to state 31
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 110

state 107

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 111
    statement                      shift and go to state 3

state 108

    (10) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 112

state 109

    (17) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON . RACCOLADE

    RACCOLADE       shift and go to state 113


state 110

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression . SEMICOLON RACCOLADE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . INF expression
    (30) expression -> expression . SUP expression
    (31) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 114
    PLUS            shift and go to state 44
    TIMES           shift and go to state 45
    MINUS           shift and go to state 46
    DIVIDE          shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    INF             shift and go to state 50
    SUP             shift and go to state 51
    EQUALS          shift and go to state 52


state 111

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 115
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 112

    (10) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . PRINT LPAREN callValue RPAREN
    (6) statement -> . NAME AFFECT expression
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (8) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (9) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (10) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . NAME LPAREN RPAREN
    (20) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 116
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 113

    (17) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 17 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 17 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)


state 114

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON . RACCOLADE

    RACCOLADE       shift and go to state 117


state 115

    (8) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 8 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 8 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .)


state 116

    (10) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 10 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 10 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .)


state 117

    (18) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 18 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 18 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for INF in state 70 resolved as shift
WARNING: shift/reduce conflict for SUP in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for INF in state 71 resolved as shift
WARNING: shift/reduce conflict for SUP in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for INF in state 72 resolved as shift
WARNING: shift/reduce conflict for SUP in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for INF in state 73 resolved as shift
WARNING: shift/reduce conflict for SUP in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for INF in state 74 resolved as shift
WARNING: shift/reduce conflict for SUP in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 74 resolved as shift
