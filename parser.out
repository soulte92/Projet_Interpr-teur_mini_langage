Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement SEMICOLON
Rule 3     bloc -> statement SEMICOLON
Rule 4     statement -> PRINT LPAREN multiExpr RPAREN
Rule 5     statement -> NAME AFFECT expression
Rule 6     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 7     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
Rule 8     statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 9     statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
Rule 10    multiname -> NAME VIRG multiname
Rule 11    multiname -> NAME
Rule 12    multiExpr -> expression VIRG multiExpr
Rule 13    multiExpr -> expression
Rule 14    statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
Rule 15    statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
Rule 16    statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
Rule 17    statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
Rule 18    statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
Rule 19    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
Rule 20    func_instrs -> RETURN expression SEMICOLON
Rule 21    func_instrs -> bloc RETURN expression SEMICOLON
Rule 22    func_instrs -> RETURN expression SEMICOLON bloc
Rule 23    func_instrs -> bloc RETURN expression SEMICOLON bloc
Rule 24    statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
Rule 25    statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
Rule 26    statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
Rule 27    statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
Rule 28    statement -> NAME LPAREN RPAREN
Rule 29    statement -> NAME LPAREN multiExpr RPAREN
Rule 30    callValue -> NAME LPAREN RPAREN
Rule 31    callValue -> NAME LPAREN multiExpr RPAREN
Rule 32    expression -> expression PLUS expression
Rule 33    expression -> expression TIMES expression
Rule 34    expression -> expression MINUS expression
Rule 35    expression -> expression DIVIDE expression
Rule 36    expression -> expression AND expression
Rule 37    expression -> expression OR expression
Rule 38    expression -> expression INF expression
Rule 39    expression -> expression SUP expression
Rule 40    expression -> expression EQUALS expression
Rule 41    expression -> LPAREN expression RPAREN
Rule 42    expression -> NUMBER
Rule 43    expression -> callValue
Rule 44    expression -> NAME
Rule 45    expression -> GUILLEMET NAME GUILLEMET
Rule 46    expression -> TRUE
Rule 47    expression -> FALSE

Terminals, with rules where they appear

AFFECT               : 5 24 25 26 27
AND                  : 36
DIVIDE               : 35
ELSE                 : 7
EQUALS               : 40
FALSE                : 47
FOR                  : 9
FUNCTIONVALUE        : 18 19
FUNCTIONVALUEIMP     : 24 25 26 27
FUNCTIONVOID         : 14 15 16 17
GUILLEMET            : 45 45
IF                   : 6 7
INF                  : 38
LACCOLADE            : 6 7 7 8 9 14 15 16 17 18 19 24 25 26 27
LPAREN               : 4 6 7 8 9 14 15 16 17 18 19 24 25 26 27 28 29 30 31 41
MINUS                : 34
NAME                 : 5 10 11 14 15 16 17 18 19 24 24 25 25 26 26 27 27 28 29 30 31 44 45
NUMBER               : 42
OR                   : 37
PLUS                 : 32
PRINT                : 4
RACCOLADE            : 6 7 7 8 9 14 15 16 17 18 19 24 25 26 27
RETURN               : 15 17 20 21 22 23
RPAREN               : 4 6 7 8 9 14 15 16 17 18 19 24 25 26 27 28 29 30 31 41
SEMICOLON            : 2 3 9 9 15 17 20 21 22 23 24 25 26 27
SUP                  : 39
TIMES                : 33
TRUE                 : 46
VIRG                 : 10 12
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 6 7 7 8 9 14 15 16 17 21 22 23 23 24 25 25 27
callValue            : 43
expression           : 5 6 7 8 9 12 13 20 21 22 23 24 25 26 27 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41
func_instrs          : 18 19
multiExpr            : 4 12 29 31
multiname            : 10 16 17 19 24 25 26 27
start                : 0
statement            : 2 3 9 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    $end            reduce using rule 1 (start -> bloc .)
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 3

    (3) bloc -> statement . SEMICOLON

    SEMICOLON       shift and go to state 13


state 4

    (4) statement -> PRINT . LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 14


state 5

    (5) statement -> NAME . AFFECT expression
    (28) statement -> NAME . LPAREN RPAREN
    (29) statement -> NAME . LPAREN multiExpr RPAREN

    AFFECT          shift and go to state 15
    LPAREN          shift and go to state 16


state 6

    (6) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 17


state 7

    (8) statement -> WHILE . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 18


state 8

    (9) statement -> FOR . LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 19


state 9

    (14) statement -> FUNCTIONVOID . NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> FUNCTIONVOID . NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> FUNCTIONVOID . NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> FUNCTIONVOID . NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE

    NAME            shift and go to state 20


state 10

    (18) statement -> FUNCTIONVALUE . NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE

    NAME            shift and go to state 21


state 11

    (24) statement -> FUNCTIONVALUEIMP . NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP . NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUEIMP . NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP . NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    NAME            shift and go to state 22


state 12

    (2) bloc -> bloc statement . SEMICOLON

    SEMICOLON       shift and go to state 23


state 13

    (3) bloc -> statement SEMICOLON .

    PRINT           reduce using rule 3 (bloc -> statement SEMICOLON .)
    NAME            reduce using rule 3 (bloc -> statement SEMICOLON .)
    IF              reduce using rule 3 (bloc -> statement SEMICOLON .)
    WHILE           reduce using rule 3 (bloc -> statement SEMICOLON .)
    FOR             reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTIONVOID    reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTIONVALUE   reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTIONVALUEIMP reduce using rule 3 (bloc -> statement SEMICOLON .)
    $end            reduce using rule 3 (bloc -> statement SEMICOLON .)
    RACCOLADE       reduce using rule 3 (bloc -> statement SEMICOLON .)
    RETURN          reduce using rule 3 (bloc -> statement SEMICOLON .)


state 14

    (4) statement -> PRINT LPAREN . multiExpr RPAREN
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    multiExpr                      shift and go to state 25
    expression                     shift and go to state 26
    callValue                      shift and go to state 28

state 15

    (5) statement -> NAME AFFECT . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 33
    callValue                      shift and go to state 28

state 16

    (28) statement -> NAME LPAREN . RPAREN
    (29) statement -> NAME LPAREN . multiExpr RPAREN
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    RPAREN          shift and go to state 34
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    multiExpr                      shift and go to state 35
    expression                     shift and go to state 26
    callValue                      shift and go to state 28

state 17

    (6) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 36
    callValue                      shift and go to state 28

state 18

    (8) statement -> WHILE LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 37
    callValue                      shift and go to state 28

state 19

    (9) statement -> FOR LPAREN . statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 38

state 20

    (14) statement -> FUNCTIONVOID NAME . LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> FUNCTIONVOID NAME . LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> FUNCTIONVOID NAME . LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> FUNCTIONVOID NAME . LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE

    LPAREN          shift and go to state 39


state 21

    (18) statement -> FUNCTIONVALUE NAME . LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE

    LPAREN          shift and go to state 40


state 22

    (24) statement -> FUNCTIONVALUEIMP NAME . LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME . LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUEIMP NAME . LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME . LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    LPAREN          shift and go to state 41


state 23

    (2) bloc -> bloc statement SEMICOLON .

    PRINT           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    NAME            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    IF              reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    WHILE           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FOR             reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTIONVOID    reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTIONVALUE   reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTIONVALUEIMP reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    $end            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    RACCOLADE       reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    RETURN          reduce using rule 2 (bloc -> bloc statement SEMICOLON .)


state 24

    (41) expression -> LPAREN . expression RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 42
    callValue                      shift and go to state 28

state 25

    (4) statement -> PRINT LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 43


state 26

    (12) multiExpr -> expression . VIRG multiExpr
    (13) multiExpr -> expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            shift and go to state 44
    RPAREN          reduce using rule 13 (multiExpr -> expression .)
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 27

    (42) expression -> NUMBER .

    VIRG            reduce using rule 42 (expression -> NUMBER .)
    PLUS            reduce using rule 42 (expression -> NUMBER .)
    TIMES           reduce using rule 42 (expression -> NUMBER .)
    MINUS           reduce using rule 42 (expression -> NUMBER .)
    DIVIDE          reduce using rule 42 (expression -> NUMBER .)
    AND             reduce using rule 42 (expression -> NUMBER .)
    OR              reduce using rule 42 (expression -> NUMBER .)
    INF             reduce using rule 42 (expression -> NUMBER .)
    SUP             reduce using rule 42 (expression -> NUMBER .)
    EQUALS          reduce using rule 42 (expression -> NUMBER .)
    RPAREN          reduce using rule 42 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 42 (expression -> NUMBER .)


state 28

    (43) expression -> callValue .

    VIRG            reduce using rule 43 (expression -> callValue .)
    PLUS            reduce using rule 43 (expression -> callValue .)
    TIMES           reduce using rule 43 (expression -> callValue .)
    MINUS           reduce using rule 43 (expression -> callValue .)
    DIVIDE          reduce using rule 43 (expression -> callValue .)
    AND             reduce using rule 43 (expression -> callValue .)
    OR              reduce using rule 43 (expression -> callValue .)
    INF             reduce using rule 43 (expression -> callValue .)
    SUP             reduce using rule 43 (expression -> callValue .)
    EQUALS          reduce using rule 43 (expression -> callValue .)
    RPAREN          reduce using rule 43 (expression -> callValue .)
    SEMICOLON       reduce using rule 43 (expression -> callValue .)


state 29

    (44) expression -> NAME .
    (30) callValue -> NAME . LPAREN RPAREN
    (31) callValue -> NAME . LPAREN multiExpr RPAREN

    VIRG            reduce using rule 44 (expression -> NAME .)
    PLUS            reduce using rule 44 (expression -> NAME .)
    TIMES           reduce using rule 44 (expression -> NAME .)
    MINUS           reduce using rule 44 (expression -> NAME .)
    DIVIDE          reduce using rule 44 (expression -> NAME .)
    AND             reduce using rule 44 (expression -> NAME .)
    OR              reduce using rule 44 (expression -> NAME .)
    INF             reduce using rule 44 (expression -> NAME .)
    SUP             reduce using rule 44 (expression -> NAME .)
    EQUALS          reduce using rule 44 (expression -> NAME .)
    RPAREN          reduce using rule 44 (expression -> NAME .)
    SEMICOLON       reduce using rule 44 (expression -> NAME .)
    LPAREN          shift and go to state 54


state 30

    (45) expression -> GUILLEMET . NAME GUILLEMET

    NAME            shift and go to state 55


state 31

    (46) expression -> TRUE .

    VIRG            reduce using rule 46 (expression -> TRUE .)
    PLUS            reduce using rule 46 (expression -> TRUE .)
    TIMES           reduce using rule 46 (expression -> TRUE .)
    MINUS           reduce using rule 46 (expression -> TRUE .)
    DIVIDE          reduce using rule 46 (expression -> TRUE .)
    AND             reduce using rule 46 (expression -> TRUE .)
    OR              reduce using rule 46 (expression -> TRUE .)
    INF             reduce using rule 46 (expression -> TRUE .)
    SUP             reduce using rule 46 (expression -> TRUE .)
    EQUALS          reduce using rule 46 (expression -> TRUE .)
    RPAREN          reduce using rule 46 (expression -> TRUE .)
    SEMICOLON       reduce using rule 46 (expression -> TRUE .)


state 32

    (47) expression -> FALSE .

    VIRG            reduce using rule 47 (expression -> FALSE .)
    PLUS            reduce using rule 47 (expression -> FALSE .)
    TIMES           reduce using rule 47 (expression -> FALSE .)
    MINUS           reduce using rule 47 (expression -> FALSE .)
    DIVIDE          reduce using rule 47 (expression -> FALSE .)
    AND             reduce using rule 47 (expression -> FALSE .)
    OR              reduce using rule 47 (expression -> FALSE .)
    INF             reduce using rule 47 (expression -> FALSE .)
    SUP             reduce using rule 47 (expression -> FALSE .)
    EQUALS          reduce using rule 47 (expression -> FALSE .)
    RPAREN          reduce using rule 47 (expression -> FALSE .)
    SEMICOLON       reduce using rule 47 (expression -> FALSE .)


state 33

    (5) statement -> NAME AFFECT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       reduce using rule 5 (statement -> NAME AFFECT expression .)
    RPAREN          reduce using rule 5 (statement -> NAME AFFECT expression .)
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 34

    (28) statement -> NAME LPAREN RPAREN .

    SEMICOLON       reduce using rule 28 (statement -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 28 (statement -> NAME LPAREN RPAREN .)


state 35

    (29) statement -> NAME LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 56


state 36

    (6) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 57
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 37

    (8) statement -> WHILE LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 38

    (9) statement -> FOR LPAREN statement . SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE

    SEMICOLON       shift and go to state 59


state 39

    (14) statement -> FUNCTIONVOID NAME LPAREN . RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> FUNCTIONVOID NAME LPAREN . RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> FUNCTIONVOID NAME LPAREN . multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> FUNCTIONVOID NAME LPAREN . multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (10) multiname -> . NAME VIRG multiname
    (11) multiname -> . NAME

    RPAREN          shift and go to state 61
    NAME            shift and go to state 60

    multiname                      shift and go to state 62

state 40

    (18) statement -> FUNCTIONVALUE NAME LPAREN . RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (10) multiname -> . NAME VIRG multiname
    (11) multiname -> . NAME

    RPAREN          shift and go to state 63
    NAME            shift and go to state 60

    multiname                      shift and go to state 64

state 41

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN . multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN . multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN . multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN . multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (10) multiname -> . NAME VIRG multiname
    (11) multiname -> . NAME

    NAME            shift and go to state 60

    multiname                      shift and go to state 65

state 42

    (41) expression -> LPAREN expression . RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 66
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 43

    (4) statement -> PRINT LPAREN multiExpr RPAREN .

    SEMICOLON       reduce using rule 4 (statement -> PRINT LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 4 (statement -> PRINT LPAREN multiExpr RPAREN .)


state 44

    (12) multiExpr -> expression VIRG . multiExpr
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 26
    multiExpr                      shift and go to state 67
    callValue                      shift and go to state 28

state 45

    (32) expression -> expression PLUS . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 68
    callValue                      shift and go to state 28

state 46

    (33) expression -> expression TIMES . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 69
    callValue                      shift and go to state 28

state 47

    (34) expression -> expression MINUS . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 70
    callValue                      shift and go to state 28

state 48

    (35) expression -> expression DIVIDE . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 71
    callValue                      shift and go to state 28

state 49

    (36) expression -> expression AND . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 72
    callValue                      shift and go to state 28

state 50

    (37) expression -> expression OR . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 73
    callValue                      shift and go to state 28

state 51

    (38) expression -> expression INF . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 74
    callValue                      shift and go to state 28

state 52

    (39) expression -> expression SUP . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 75
    callValue                      shift and go to state 28

state 53

    (40) expression -> expression EQUALS . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 76
    callValue                      shift and go to state 28

state 54

    (30) callValue -> NAME LPAREN . RPAREN
    (31) callValue -> NAME LPAREN . multiExpr RPAREN
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    RPAREN          shift and go to state 77
    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    multiExpr                      shift and go to state 78
    expression                     shift and go to state 26
    callValue                      shift and go to state 28

state 55

    (45) expression -> GUILLEMET NAME . GUILLEMET

    GUILLEMET       shift and go to state 79


state 56

    (29) statement -> NAME LPAREN multiExpr RPAREN .

    SEMICOLON       reduce using rule 29 (statement -> NAME LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 29 (statement -> NAME LPAREN multiExpr RPAREN .)


state 57

    (6) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE
    (7) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 80


state 58

    (8) statement -> WHILE LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 81


state 59

    (9) statement -> FOR LPAREN statement SEMICOLON . expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 82
    callValue                      shift and go to state 28

state 60

    (10) multiname -> NAME . VIRG multiname
    (11) multiname -> NAME .

    VIRG            shift and go to state 83
    RPAREN          reduce using rule 11 (multiname -> NAME .)


state 61

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN . LACCOLADE bloc RACCOLADE
    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN . LACCOLADE bloc RETURN SEMICOLON RACCOLADE

    LACCOLADE       shift and go to state 84


state 62

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname . RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> FUNCTIONVOID NAME LPAREN multiname . RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE

    RPAREN          shift and go to state 85


state 63

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN . LACCOLADE func_instrs RACCOLADE

    LACCOLADE       shift and go to state 86


state 64

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE func_instrs RACCOLADE

    RPAREN          shift and go to state 87


state 65

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname . RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname . RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname . RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname . RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    RPAREN          shift and go to state 88


state 66

    (41) expression -> LPAREN expression RPAREN .

    VIRG            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 41 (expression -> LPAREN expression RPAREN .)


state 67

    (12) multiExpr -> expression VIRG multiExpr .

    RPAREN          reduce using rule 12 (multiExpr -> expression VIRG multiExpr .)


state 68

    (32) expression -> expression PLUS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 32 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 32 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 32 (expression -> expression PLUS expression .)
    AND             reduce using rule 32 (expression -> expression PLUS expression .)
    OR              reduce using rule 32 (expression -> expression PLUS expression .)
    INF             reduce using rule 32 (expression -> expression PLUS expression .)
    SUP             reduce using rule 32 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 32 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 32 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 47 ]
  ! AND             [ shift and go to state 49 ]
  ! OR              [ shift and go to state 50 ]
  ! INF             [ shift and go to state 51 ]
  ! SUP             [ shift and go to state 52 ]
  ! EQUALS          [ shift and go to state 53 ]


state 69

    (33) expression -> expression TIMES expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 33 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 33 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 33 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 33 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 33 (expression -> expression TIMES expression .)
    AND             reduce using rule 33 (expression -> expression TIMES expression .)
    OR              reduce using rule 33 (expression -> expression TIMES expression .)
    INF             reduce using rule 33 (expression -> expression TIMES expression .)
    SUP             reduce using rule 33 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 33 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 33 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 45 ]
  ! TIMES           [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! OR              [ shift and go to state 50 ]
  ! INF             [ shift and go to state 51 ]
  ! SUP             [ shift and go to state 52 ]
  ! EQUALS          [ shift and go to state 53 ]


state 70

    (34) expression -> expression MINUS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 34 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 34 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 34 (expression -> expression MINUS expression .)
    AND             reduce using rule 34 (expression -> expression MINUS expression .)
    OR              reduce using rule 34 (expression -> expression MINUS expression .)
    INF             reduce using rule 34 (expression -> expression MINUS expression .)
    SUP             reduce using rule 34 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 34 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 47 ]
  ! AND             [ shift and go to state 49 ]
  ! OR              [ shift and go to state 50 ]
  ! INF             [ shift and go to state 51 ]
  ! SUP             [ shift and go to state 52 ]
  ! EQUALS          [ shift and go to state 53 ]


state 71

    (35) expression -> expression DIVIDE expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 35 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 35 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 35 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 35 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 35 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 35 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 35 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 35 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 35 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 35 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 45 ]
  ! TIMES           [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! OR              [ shift and go to state 50 ]
  ! INF             [ shift and go to state 51 ]
  ! SUP             [ shift and go to state 52 ]
  ! EQUALS          [ shift and go to state 53 ]


state 72

    (36) expression -> expression AND expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 36 (expression -> expression AND expression .)
    RPAREN          reduce using rule 36 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression AND expression .)
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53

  ! PLUS            [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 36 (expression -> expression AND expression .) ]


state 73

    (37) expression -> expression OR expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 37 (expression -> expression OR expression .)
    RPAREN          reduce using rule 37 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression OR expression .)
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53

  ! PLUS            [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 37 (expression -> expression OR expression .) ]


state 74

    (38) expression -> expression INF expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 38 (expression -> expression INF expression .)
    RPAREN          reduce using rule 38 (expression -> expression INF expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression INF expression .)
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53

  ! PLUS            [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! INF             [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! SUP             [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! EQUALS          [ reduce using rule 38 (expression -> expression INF expression .) ]


state 75

    (39) expression -> expression SUP expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 39 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 39 (expression -> expression SUP expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression SUP expression .)
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53

  ! PLUS            [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! INF             [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! EQUALS          [ reduce using rule 39 (expression -> expression SUP expression .) ]


state 76

    (40) expression -> expression EQUALS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 40 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 40 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53

  ! PLUS            [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! INF             [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> expression EQUALS expression .) ]


state 77

    (30) callValue -> NAME LPAREN RPAREN .

    VIRG            reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    TIMES           reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    AND             reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    OR              reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    INF             reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    SUP             reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    EQUALS          reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    SEMICOLON       reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)


state 78

    (31) callValue -> NAME LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 89


state 79

    (45) expression -> GUILLEMET NAME GUILLEMET .

    VIRG            reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    PLUS            reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    TIMES           reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    MINUS           reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    DIVIDE          reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    AND             reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    OR              reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    INF             reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    SUP             reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    EQUALS          reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    RPAREN          reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    SEMICOLON       reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)


state 80

    (6) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (7) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 90
    statement                      shift and go to state 3

state 81

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 91
    statement                      shift and go to state 3

state 82

    (9) statement -> FOR LPAREN statement SEMICOLON expression . SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 92
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 83

    (10) multiname -> NAME VIRG . multiname
    (10) multiname -> . NAME VIRG multiname
    (11) multiname -> . NAME

    NAME            shift and go to state 60

    multiname                      shift and go to state 93

state 84

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE . bloc RACCOLADE
    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE . bloc RETURN SEMICOLON RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 94
    statement                      shift and go to state 3

state 85

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN . LACCOLADE bloc RACCOLADE
    (17) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN . LACCOLADE bloc RETURN SEMICOLON RACCOLADE

    LACCOLADE       shift and go to state 95


state 86

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE . func_instrs RACCOLADE
    (20) func_instrs -> . RETURN expression SEMICOLON
    (21) func_instrs -> . bloc RETURN expression SEMICOLON
    (22) func_instrs -> . RETURN expression SEMICOLON bloc
    (23) func_instrs -> . bloc RETURN expression SEMICOLON bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 97
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    func_instrs                    shift and go to state 96
    bloc                           shift and go to state 98
    statement                      shift and go to state 3

state 87

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE func_instrs RACCOLADE

    LACCOLADE       shift and go to state 99


state 88

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN . LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN . LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN . LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN . LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    LACCOLADE       shift and go to state 100


state 89

    (31) callValue -> NAME LPAREN multiExpr RPAREN .

    VIRG            reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    PLUS            reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    TIMES           reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    MINUS           reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    DIVIDE          reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    AND             reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    OR              reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    INF             reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    SUP             reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    EQUALS          reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    SEMICOLON       reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)


state 90

    (6) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 101
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 91

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 102
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 92

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON . statement RPAREN LACCOLADE bloc RACCOLADE
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 103

state 93

    (10) multiname -> NAME VIRG multiname .

    RPAREN          reduce using rule 10 (multiname -> NAME VIRG multiname .)


state 94

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc . RACCOLADE
    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc . RETURN SEMICOLON RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 104
    RETURN          shift and go to state 105
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 95

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE . bloc RACCOLADE
    (17) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE . bloc RETURN SEMICOLON RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 106
    statement                      shift and go to state 3

state 96

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs . RACCOLADE

    RACCOLADE       shift and go to state 107


state 97

    (20) func_instrs -> RETURN . expression SEMICOLON
    (22) func_instrs -> RETURN . expression SEMICOLON bloc
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 108
    callValue                      shift and go to state 28

state 98

    (21) func_instrs -> bloc . RETURN expression SEMICOLON
    (23) func_instrs -> bloc . RETURN expression SEMICOLON bloc
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 109
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 99

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . func_instrs RACCOLADE
    (20) func_instrs -> . RETURN expression SEMICOLON
    (21) func_instrs -> . bloc RETURN expression SEMICOLON
    (22) func_instrs -> . RETURN expression SEMICOLON bloc
    (23) func_instrs -> . bloc RETURN expression SEMICOLON bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 97
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    func_instrs                    shift and go to state 110
    bloc                           shift and go to state 98
    statement                      shift and go to state 3

state 100

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE . bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE . bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE . NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE . NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    NAME            shift and go to state 111
    PRINT           shift and go to state 4
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 112
    statement                      shift and go to state 3

state 101

    (6) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .
    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE . ELSE LACCOLADE bloc RACCOLADE

    SEMICOLON       reduce using rule 6 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    ELSE            shift and go to state 113


state 102

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 103

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 114


state 104

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 14 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 14 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)


state 105

    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN . SEMICOLON RACCOLADE

    SEMICOLON       shift and go to state 115


state 106

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc . RACCOLADE
    (17) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc . RETURN SEMICOLON RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 116
    RETURN          shift and go to state 117
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 107

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE .

    SEMICOLON       reduce using rule 18 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE .)
    RPAREN          reduce using rule 18 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE .)


state 108

    (20) func_instrs -> RETURN expression . SEMICOLON
    (22) func_instrs -> RETURN expression . SEMICOLON bloc
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 118
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 109

    (21) func_instrs -> bloc RETURN . expression SEMICOLON
    (23) func_instrs -> bloc RETURN . expression SEMICOLON bloc
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 119
    callValue                      shift and go to state 28

state 110

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs . RACCOLADE

    RACCOLADE       shift and go to state 120


state 111

    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME . AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME . AFFECT expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME . AFFECT expression
    (28) statement -> NAME . LPAREN RPAREN
    (29) statement -> NAME . LPAREN multiExpr RPAREN

    AFFECT          shift and go to state 121
    LPAREN          shift and go to state 16


state 112

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc . NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc . NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    NAME            shift and go to state 122
    PRINT           shift and go to state 4
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 113

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 123


state 114

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 124


state 115

    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON . RACCOLADE

    RACCOLADE       shift and go to state 125


state 116

    (16) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 16 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 16 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .)


state 117

    (17) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN . SEMICOLON RACCOLADE

    SEMICOLON       shift and go to state 126


state 118

    (20) func_instrs -> RETURN expression SEMICOLON .
    (22) func_instrs -> RETURN expression SEMICOLON . bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       reduce using rule 20 (func_instrs -> RETURN expression SEMICOLON .)
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 127
    statement                      shift and go to state 3

state 119

    (21) func_instrs -> bloc RETURN expression . SEMICOLON
    (23) func_instrs -> bloc RETURN expression . SEMICOLON bloc
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 128
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53


state 120

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE .

    SEMICOLON       reduce using rule 19 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE .)
    RPAREN          reduce using rule 19 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE .)


state 121

    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT . expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT . expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 129
    callValue                      shift and go to state 28

state 122

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME . AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME . AFFECT expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME . AFFECT expression
    (28) statement -> NAME . LPAREN RPAREN
    (29) statement -> NAME . LPAREN multiExpr RPAREN

    AFFECT          shift and go to state 130
    LPAREN          shift and go to state 16


state 123

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 131
    statement                      shift and go to state 3

state 124

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 3
    bloc                           shift and go to state 132

state 125

    (15) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 15 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 15 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE .)


state 126

    (17) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON . RACCOLADE

    RACCOLADE       shift and go to state 133


state 127

    (22) func_instrs -> RETURN expression SEMICOLON bloc .
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       reduce using rule 22 (func_instrs -> RETURN expression SEMICOLON bloc .)
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 128

    (21) func_instrs -> bloc RETURN expression SEMICOLON .
    (23) func_instrs -> bloc RETURN expression SEMICOLON . bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       reduce using rule 21 (func_instrs -> bloc RETURN expression SEMICOLON .)
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 134
    statement                      shift and go to state 3

state 129

    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression . SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression . SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 135
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53

  ! SEMICOLON       [ reduce using rule 5 (statement -> NAME AFFECT expression .) ]


state 130

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT . expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT . expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 27
    NAME            shift and go to state 29
    GUILLEMET       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32

    expression                     shift and go to state 136
    callValue                      shift and go to state 28

state 131

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 137
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 132

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 138
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 133

    (17) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 17 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 17 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE .)


state 134

    (23) func_instrs -> bloc RETURN expression SEMICOLON bloc .
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       reduce using rule 23 (func_instrs -> bloc RETURN expression SEMICOLON bloc .)
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 135

    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON . RACCOLADE
    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 139
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 140
    statement                      shift and go to state 3

state 136

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression . SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression . SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 141
    PLUS            shift and go to state 45
    TIMES           shift and go to state 46
    MINUS           shift and go to state 47
    DIVIDE          shift and go to state 48
    AND             shift and go to state 49
    OR              shift and go to state 50
    INF             shift and go to state 51
    SUP             shift and go to state 52
    EQUALS          shift and go to state 53

  ! SEMICOLON       [ reduce using rule 5 (statement -> NAME AFFECT expression .) ]


state 137

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .)


state 138

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .)


state 139

    (26) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 26 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 26 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE .)


state 140

    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 142
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 141

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON . RACCOLADE
    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 144
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    bloc                           shift and go to state 143
    statement                      shift and go to state 3

state 142

    (27) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 27 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 27 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE .)


state 143

    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (16) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (17) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE func_instrs RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE func_instrs RACCOLADE
    (24) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 145
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10
    FUNCTIONVALUEIMP shift and go to state 11

    statement                      shift and go to state 12

state 144

    (24) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 24 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 24 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE .)


state 145

    (25) statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 25 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 25 (statement -> FUNCTIONVALUEIMP NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for INF in state 72 resolved as shift
WARNING: shift/reduce conflict for SUP in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for INF in state 73 resolved as shift
WARNING: shift/reduce conflict for SUP in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for INF in state 74 resolved as shift
WARNING: shift/reduce conflict for SUP in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for INF in state 75 resolved as shift
WARNING: shift/reduce conflict for SUP in state 75 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for INF in state 76 resolved as shift
WARNING: shift/reduce conflict for SUP in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 76 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 129 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 136 resolved as shift
