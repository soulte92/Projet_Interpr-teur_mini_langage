Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement SEMICOLON
Rule 3     bloc -> statement SEMICOLON
Rule 4     statement -> PRINT LPAREN multiExpr RPAREN
Rule 5     statement -> NAME AFFECT expression
Rule 6     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 7     statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
Rule 8     statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
Rule 9     statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
Rule 10    multiname -> NAME VIRG multiname
Rule 11    multiname -> NAME
Rule 12    multiExpr -> expression VIRG multiExpr
Rule 13    multiExpr -> expression
Rule 14    statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
Rule 15    statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
Rule 16    statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
Rule 17    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
Rule 18    statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
Rule 19    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
Rule 20    statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
Rule 21    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
Rule 22    statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
Rule 23    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
Rule 24    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
Rule 25    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
Rule 26    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
Rule 27    statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
Rule 28    statement -> NAME LPAREN RPAREN
Rule 29    statement -> NAME LPAREN multiExpr RPAREN
Rule 30    callValue -> NAME LPAREN RPAREN
Rule 31    callValue -> NAME LPAREN multiExpr RPAREN
Rule 32    expression -> expression PLUS expression
Rule 33    expression -> expression TIMES expression
Rule 34    expression -> expression MINUS expression
Rule 35    expression -> expression DIVIDE expression
Rule 36    expression -> expression AND expression
Rule 37    expression -> expression OR expression
Rule 38    expression -> expression INF expression
Rule 39    expression -> expression SUP expression
Rule 40    expression -> expression EQUALS expression
Rule 41    expression -> LPAREN expression RPAREN
Rule 42    expression -> NUMBER
Rule 43    expression -> callValue
Rule 44    expression -> NAME
Rule 45    expression -> GUILLEMET NAME GUILLEMET
Rule 46    expression -> TRUE
Rule 47    expression -> FALSE

Terminals, with rules where they appear

AFFECT               : 5 24 25 26 27
AND                  : 36
DIVIDE               : 35
ELSE                 : 7
EQUALS               : 40
FALSE                : 47
FOR                  : 9
FUNCTIONVALUE        : 16 17 18 19 20 21 22 23 24 25 26 27
FUNCTIONVOID         : 14 15
GUILLEMET            : 45 45
IF                   : 6 7
INF                  : 38
LACCOLADE            : 6 7 7 8 9 14 15 16 17 18 19 20 21 22 23 24 25 26 27
LPAREN               : 4 6 7 8 9 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 41
MINUS                : 34
NAME                 : 5 10 11 14 15 16 17 18 19 20 21 22 23 24 24 25 25 26 26 27 27 28 29 30 31 44 45
NUMBER               : 42
OR                   : 37
PLUS                 : 32
PRINT                : 4
RACCOLADE            : 6 7 7 8 9 14 15 16 17 18 19 20 21 22 23 24 25 26 27
RETURN               : 16 17 18 19 20 21 22 23
RPAREN               : 4 6 7 8 9 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 41
SEMICOLON            : 2 3 9 9 16 17 18 19 20 21 22 23 24 25 26 27
SUP                  : 39
TIMES                : 33
TRUE                 : 46
VIRG                 : 10 12
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

bloc                 : 1 2 6 7 7 8 9 14 15 18 19 20 21 22 22 23 23 24 25 25 27
callValue            : 43
expression           : 5 6 7 8 9 12 13 16 17 18 19 20 21 22 23 24 25 26 27 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41
multiExpr            : 4 12 29 31
multiname            : 10 15 17 19 21 23 24 25 26 27
start                : 0
statement            : 2 3 9 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    $end            reduce using rule 1 (start -> bloc .)
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement . SEMICOLON

    SEMICOLON       shift and go to state 12


state 4

    (4) statement -> PRINT . LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 13


state 5

    (5) statement -> NAME . AFFECT expression
    (28) statement -> NAME . LPAREN RPAREN
    (29) statement -> NAME . LPAREN multiExpr RPAREN

    AFFECT          shift and go to state 14
    LPAREN          shift and go to state 15


state 6

    (6) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> IF . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 16


state 7

    (8) statement -> WHILE . LPAREN expression RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 17


state 8

    (9) statement -> FOR . LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 18


state 9

    (14) statement -> FUNCTIONVOID . NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> FUNCTIONVOID . NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE

    NAME            shift and go to state 19


state 10

    (16) statement -> FUNCTIONVALUE . NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE . NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> FUNCTIONVALUE . NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> FUNCTIONVALUE . NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE . NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    NAME            shift and go to state 20


state 11

    (2) bloc -> bloc statement . SEMICOLON

    SEMICOLON       shift and go to state 21


state 12

    (3) bloc -> statement SEMICOLON .

    PRINT           reduce using rule 3 (bloc -> statement SEMICOLON .)
    NAME            reduce using rule 3 (bloc -> statement SEMICOLON .)
    IF              reduce using rule 3 (bloc -> statement SEMICOLON .)
    WHILE           reduce using rule 3 (bloc -> statement SEMICOLON .)
    FOR             reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTIONVOID    reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTIONVALUE   reduce using rule 3 (bloc -> statement SEMICOLON .)
    $end            reduce using rule 3 (bloc -> statement SEMICOLON .)
    RACCOLADE       reduce using rule 3 (bloc -> statement SEMICOLON .)
    RETURN          reduce using rule 3 (bloc -> statement SEMICOLON .)


state 13

    (4) statement -> PRINT LPAREN . multiExpr RPAREN
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    multiExpr                      shift and go to state 23
    expression                     shift and go to state 24
    callValue                      shift and go to state 26

state 14

    (5) statement -> NAME AFFECT . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 31
    callValue                      shift and go to state 26

state 15

    (28) statement -> NAME LPAREN . RPAREN
    (29) statement -> NAME LPAREN . multiExpr RPAREN
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    RPAREN          shift and go to state 32
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    multiExpr                      shift and go to state 33
    expression                     shift and go to state 24
    callValue                      shift and go to state 26

state 16

    (6) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> IF LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 34
    callValue                      shift and go to state 26

state 17

    (8) statement -> WHILE LPAREN . expression RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 35
    callValue                      shift and go to state 26

state 18

    (9) statement -> FOR LPAREN . statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 36

state 19

    (14) statement -> FUNCTIONVOID NAME . LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> FUNCTIONVOID NAME . LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE

    LPAREN          shift and go to state 37


state 20

    (16) statement -> FUNCTIONVALUE NAME . LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE NAME . LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> FUNCTIONVALUE NAME . LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME . LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME . LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    LPAREN          shift and go to state 38


state 21

    (2) bloc -> bloc statement SEMICOLON .

    PRINT           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    NAME            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    IF              reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    WHILE           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FOR             reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTIONVOID    reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTIONVALUE   reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    $end            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    RACCOLADE       reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    RETURN          reduce using rule 2 (bloc -> bloc statement SEMICOLON .)


state 22

    (41) expression -> LPAREN . expression RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 39
    callValue                      shift and go to state 26

state 23

    (4) statement -> PRINT LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 40


state 24

    (12) multiExpr -> expression . VIRG multiExpr
    (13) multiExpr -> expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            shift and go to state 41
    RPAREN          reduce using rule 13 (multiExpr -> expression .)
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 25

    (42) expression -> NUMBER .

    VIRG            reduce using rule 42 (expression -> NUMBER .)
    PLUS            reduce using rule 42 (expression -> NUMBER .)
    TIMES           reduce using rule 42 (expression -> NUMBER .)
    MINUS           reduce using rule 42 (expression -> NUMBER .)
    DIVIDE          reduce using rule 42 (expression -> NUMBER .)
    AND             reduce using rule 42 (expression -> NUMBER .)
    OR              reduce using rule 42 (expression -> NUMBER .)
    INF             reduce using rule 42 (expression -> NUMBER .)
    SUP             reduce using rule 42 (expression -> NUMBER .)
    EQUALS          reduce using rule 42 (expression -> NUMBER .)
    RPAREN          reduce using rule 42 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 42 (expression -> NUMBER .)


state 26

    (43) expression -> callValue .

    VIRG            reduce using rule 43 (expression -> callValue .)
    PLUS            reduce using rule 43 (expression -> callValue .)
    TIMES           reduce using rule 43 (expression -> callValue .)
    MINUS           reduce using rule 43 (expression -> callValue .)
    DIVIDE          reduce using rule 43 (expression -> callValue .)
    AND             reduce using rule 43 (expression -> callValue .)
    OR              reduce using rule 43 (expression -> callValue .)
    INF             reduce using rule 43 (expression -> callValue .)
    SUP             reduce using rule 43 (expression -> callValue .)
    EQUALS          reduce using rule 43 (expression -> callValue .)
    RPAREN          reduce using rule 43 (expression -> callValue .)
    SEMICOLON       reduce using rule 43 (expression -> callValue .)


state 27

    (44) expression -> NAME .
    (30) callValue -> NAME . LPAREN RPAREN
    (31) callValue -> NAME . LPAREN multiExpr RPAREN

    VIRG            reduce using rule 44 (expression -> NAME .)
    PLUS            reduce using rule 44 (expression -> NAME .)
    TIMES           reduce using rule 44 (expression -> NAME .)
    MINUS           reduce using rule 44 (expression -> NAME .)
    DIVIDE          reduce using rule 44 (expression -> NAME .)
    AND             reduce using rule 44 (expression -> NAME .)
    OR              reduce using rule 44 (expression -> NAME .)
    INF             reduce using rule 44 (expression -> NAME .)
    SUP             reduce using rule 44 (expression -> NAME .)
    EQUALS          reduce using rule 44 (expression -> NAME .)
    RPAREN          reduce using rule 44 (expression -> NAME .)
    SEMICOLON       reduce using rule 44 (expression -> NAME .)
    LPAREN          shift and go to state 51


state 28

    (45) expression -> GUILLEMET . NAME GUILLEMET

    NAME            shift and go to state 52


state 29

    (46) expression -> TRUE .

    VIRG            reduce using rule 46 (expression -> TRUE .)
    PLUS            reduce using rule 46 (expression -> TRUE .)
    TIMES           reduce using rule 46 (expression -> TRUE .)
    MINUS           reduce using rule 46 (expression -> TRUE .)
    DIVIDE          reduce using rule 46 (expression -> TRUE .)
    AND             reduce using rule 46 (expression -> TRUE .)
    OR              reduce using rule 46 (expression -> TRUE .)
    INF             reduce using rule 46 (expression -> TRUE .)
    SUP             reduce using rule 46 (expression -> TRUE .)
    EQUALS          reduce using rule 46 (expression -> TRUE .)
    RPAREN          reduce using rule 46 (expression -> TRUE .)
    SEMICOLON       reduce using rule 46 (expression -> TRUE .)


state 30

    (47) expression -> FALSE .

    VIRG            reduce using rule 47 (expression -> FALSE .)
    PLUS            reduce using rule 47 (expression -> FALSE .)
    TIMES           reduce using rule 47 (expression -> FALSE .)
    MINUS           reduce using rule 47 (expression -> FALSE .)
    DIVIDE          reduce using rule 47 (expression -> FALSE .)
    AND             reduce using rule 47 (expression -> FALSE .)
    OR              reduce using rule 47 (expression -> FALSE .)
    INF             reduce using rule 47 (expression -> FALSE .)
    SUP             reduce using rule 47 (expression -> FALSE .)
    EQUALS          reduce using rule 47 (expression -> FALSE .)
    RPAREN          reduce using rule 47 (expression -> FALSE .)
    SEMICOLON       reduce using rule 47 (expression -> FALSE .)


state 31

    (5) statement -> NAME AFFECT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       reduce using rule 5 (statement -> NAME AFFECT expression .)
    RPAREN          reduce using rule 5 (statement -> NAME AFFECT expression .)
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 32

    (28) statement -> NAME LPAREN RPAREN .

    SEMICOLON       reduce using rule 28 (statement -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 28 (statement -> NAME LPAREN RPAREN .)


state 33

    (29) statement -> NAME LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 53


state 34

    (6) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> IF LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 35

    (8) statement -> WHILE LPAREN expression . RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 55
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 36

    (9) statement -> FOR LPAREN statement . SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE

    SEMICOLON       shift and go to state 56


state 37

    (14) statement -> FUNCTIONVOID NAME LPAREN . RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> FUNCTIONVOID NAME LPAREN . multiname RPAREN LACCOLADE bloc RACCOLADE
    (10) multiname -> . NAME VIRG multiname
    (11) multiname -> . NAME

    RPAREN          shift and go to state 58
    NAME            shift and go to state 57

    multiname                      shift and go to state 59

state 38

    (16) statement -> FUNCTIONVALUE NAME LPAREN . RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE NAME LPAREN . RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> FUNCTIONVALUE NAME LPAREN . RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME LPAREN . RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN . multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (10) multiname -> . NAME VIRG multiname
    (11) multiname -> . NAME

    RPAREN          shift and go to state 60
    NAME            shift and go to state 57

    multiname                      shift and go to state 61

state 39

    (41) expression -> LPAREN expression . RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 40

    (4) statement -> PRINT LPAREN multiExpr RPAREN .

    SEMICOLON       reduce using rule 4 (statement -> PRINT LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 4 (statement -> PRINT LPAREN multiExpr RPAREN .)


state 41

    (12) multiExpr -> expression VIRG . multiExpr
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 24
    multiExpr                      shift and go to state 63
    callValue                      shift and go to state 26

state 42

    (32) expression -> expression PLUS . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 64
    callValue                      shift and go to state 26

state 43

    (33) expression -> expression TIMES . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 65
    callValue                      shift and go to state 26

state 44

    (34) expression -> expression MINUS . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 66
    callValue                      shift and go to state 26

state 45

    (35) expression -> expression DIVIDE . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 67
    callValue                      shift and go to state 26

state 46

    (36) expression -> expression AND . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 68
    callValue                      shift and go to state 26

state 47

    (37) expression -> expression OR . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 69
    callValue                      shift and go to state 26

state 48

    (38) expression -> expression INF . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 70
    callValue                      shift and go to state 26

state 49

    (39) expression -> expression SUP . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 71
    callValue                      shift and go to state 26

state 50

    (40) expression -> expression EQUALS . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 72
    callValue                      shift and go to state 26

state 51

    (30) callValue -> NAME LPAREN . RPAREN
    (31) callValue -> NAME LPAREN . multiExpr RPAREN
    (12) multiExpr -> . expression VIRG multiExpr
    (13) multiExpr -> . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    RPAREN          shift and go to state 73
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    multiExpr                      shift and go to state 74
    expression                     shift and go to state 24
    callValue                      shift and go to state 26

state 52

    (45) expression -> GUILLEMET NAME . GUILLEMET

    GUILLEMET       shift and go to state 75


state 53

    (29) statement -> NAME LPAREN multiExpr RPAREN .

    SEMICOLON       reduce using rule 29 (statement -> NAME LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 29 (statement -> NAME LPAREN multiExpr RPAREN .)


state 54

    (6) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE
    (7) statement -> IF LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 76


state 55

    (8) statement -> WHILE LPAREN expression RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 77


state 56

    (9) statement -> FOR LPAREN statement SEMICOLON . expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 78
    callValue                      shift and go to state 26

state 57

    (10) multiname -> NAME . VIRG multiname
    (11) multiname -> NAME .

    VIRG            shift and go to state 79
    RPAREN          reduce using rule 11 (multiname -> NAME .)


state 58

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 80


state 59

    (15) statement -> FUNCTIONVOID NAME LPAREN multiname . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 81


state 60

    (16) statement -> FUNCTIONVALUE NAME LPAREN RPAREN . LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN . LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> FUNCTIONVALUE NAME LPAREN RPAREN . LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN . LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE

    LACCOLADE       shift and go to state 82


state 61

    (17) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname . RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    RPAREN          shift and go to state 83


state 62

    (41) expression -> LPAREN expression RPAREN .

    VIRG            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 41 (expression -> LPAREN expression RPAREN .)


state 63

    (12) multiExpr -> expression VIRG multiExpr .

    RPAREN          reduce using rule 12 (multiExpr -> expression VIRG multiExpr .)


state 64

    (32) expression -> expression PLUS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 32 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 32 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 32 (expression -> expression PLUS expression .)
    AND             reduce using rule 32 (expression -> expression PLUS expression .)
    OR              reduce using rule 32 (expression -> expression PLUS expression .)
    INF             reduce using rule 32 (expression -> expression PLUS expression .)
    SUP             reduce using rule 32 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 32 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 32 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 45

  ! TIMES           [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 44 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]


state 65

    (33) expression -> expression TIMES expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 33 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 33 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 33 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 33 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 33 (expression -> expression TIMES expression .)
    AND             reduce using rule 33 (expression -> expression TIMES expression .)
    OR              reduce using rule 33 (expression -> expression TIMES expression .)
    INF             reduce using rule 33 (expression -> expression TIMES expression .)
    SUP             reduce using rule 33 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 33 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 33 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]


state 66

    (34) expression -> expression MINUS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 34 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 34 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 34 (expression -> expression MINUS expression .)
    AND             reduce using rule 34 (expression -> expression MINUS expression .)
    OR              reduce using rule 34 (expression -> expression MINUS expression .)
    INF             reduce using rule 34 (expression -> expression MINUS expression .)
    SUP             reduce using rule 34 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 34 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 45

  ! TIMES           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 44 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]


state 67

    (35) expression -> expression DIVIDE expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    VIRG            reduce using rule 35 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 35 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 35 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 35 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 35 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 35 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 35 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 35 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 35 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 35 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! INF             [ shift and go to state 48 ]
  ! SUP             [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]


state 68

    (36) expression -> expression AND expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 36 (expression -> expression AND expression .)
    RPAREN          reduce using rule 36 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression AND expression .)
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50

  ! PLUS            [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! INF             [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! SUP             [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 36 (expression -> expression AND expression .) ]


state 69

    (37) expression -> expression OR expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 37 (expression -> expression OR expression .)
    RPAREN          reduce using rule 37 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression OR expression .)
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50

  ! PLUS            [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! INF             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! SUP             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 37 (expression -> expression OR expression .) ]


state 70

    (38) expression -> expression INF expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 38 (expression -> expression INF expression .)
    RPAREN          reduce using rule 38 (expression -> expression INF expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression INF expression .)
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50

  ! PLUS            [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! INF             [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! SUP             [ reduce using rule 38 (expression -> expression INF expression .) ]
  ! EQUALS          [ reduce using rule 38 (expression -> expression INF expression .) ]


state 71

    (39) expression -> expression SUP expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 39 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 39 (expression -> expression SUP expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression SUP expression .)
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50

  ! PLUS            [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! INF             [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! EQUALS          [ reduce using rule 39 (expression -> expression SUP expression .) ]


state 72

    (40) expression -> expression EQUALS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    VIRG            reduce using rule 40 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 40 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50

  ! PLUS            [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! INF             [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> expression EQUALS expression .) ]


state 73

    (30) callValue -> NAME LPAREN RPAREN .

    VIRG            reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    TIMES           reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    AND             reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    OR              reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    INF             reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    SUP             reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    EQUALS          reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)
    SEMICOLON       reduce using rule 30 (callValue -> NAME LPAREN RPAREN .)


state 74

    (31) callValue -> NAME LPAREN multiExpr . RPAREN

    RPAREN          shift and go to state 84


state 75

    (45) expression -> GUILLEMET NAME GUILLEMET .

    VIRG            reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    PLUS            reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    TIMES           reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    MINUS           reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    DIVIDE          reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    AND             reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    OR              reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    INF             reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    SUP             reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    EQUALS          reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    RPAREN          reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)
    SEMICOLON       reduce using rule 45 (expression -> GUILLEMET NAME GUILLEMET .)


state 76

    (6) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (7) statement -> IF LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 85
    statement                      shift and go to state 3

state 77

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 86
    statement                      shift and go to state 3

state 78

    (9) statement -> FOR LPAREN statement SEMICOLON expression . SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 87
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 79

    (10) multiname -> NAME VIRG . multiname
    (10) multiname -> . NAME VIRG multiname
    (11) multiname -> . NAME

    NAME            shift and go to state 57

    multiname                      shift and go to state 88

state 80

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 89
    statement                      shift and go to state 3

state 81

    (15) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 90


state 82

    (16) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE . RETURN expression SEMICOLON RACCOLADE
    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE . bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE . RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE . bloc RETURN expression SEMICOLON bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 91
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 92
    statement                      shift and go to state 3

state 83

    (17) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN . LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE

    LACCOLADE       shift and go to state 93


state 84

    (31) callValue -> NAME LPAREN multiExpr RPAREN .

    VIRG            reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    PLUS            reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    TIMES           reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    MINUS           reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    DIVIDE          reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    AND             reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    OR              reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    INF             reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    SUP             reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    EQUALS          reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    RPAREN          reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)
    SEMICOLON       reduce using rule 31 (callValue -> NAME LPAREN multiExpr RPAREN .)


state 85

    (6) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 94
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 86

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 95
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 87

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON . statement RPAREN LACCOLADE bloc RACCOLADE
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 96

state 88

    (10) multiname -> NAME VIRG multiname .

    RPAREN          reduce using rule 10 (multiname -> NAME VIRG multiname .)


state 89

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 97
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 90

    (15) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 98
    statement                      shift and go to state 3

state 91

    (16) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN . expression SEMICOLON RACCOLADE
    (20) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN . expression SEMICOLON bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 99
    callValue                      shift and go to state 26

state 92

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc . RETURN expression SEMICOLON RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc . RETURN expression SEMICOLON bloc RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 100
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 93

    (17) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . RETURN expression SEMICOLON RACCOLADE
    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . bloc RETURN expression SEMICOLON RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE . NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 102
    NAME            shift and go to state 101
    PRINT           shift and go to state 4
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 103
    statement                      shift and go to state 3

state 94

    (6) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .
    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE . ELSE LACCOLADE bloc RACCOLADE

    SEMICOLON       reduce using rule 6 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 6 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    ELSE            shift and go to state 104


state 95

    (8) statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE .)


state 96

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement . RPAREN LACCOLADE bloc RACCOLADE

    RPAREN          shift and go to state 105


state 97

    (14) statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 14 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 14 (statement -> FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE .)


state 98

    (15) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 106
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 99

    (16) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression . SEMICOLON RACCOLADE
    (20) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression . SEMICOLON bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 107
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 100

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN . expression SEMICOLON RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN . expression SEMICOLON bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 108
    callValue                      shift and go to state 26

state 101

    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME . AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME . AFFECT expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME . AFFECT expression
    (28) statement -> NAME . LPAREN RPAREN
    (29) statement -> NAME . LPAREN multiExpr RPAREN

    AFFECT          shift and go to state 109
    LPAREN          shift and go to state 15


state 102

    (17) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN . expression SEMICOLON RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN . expression SEMICOLON bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 110
    callValue                      shift and go to state 26

state 103

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc . RETURN expression SEMICOLON RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc . RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc . NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc . NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RETURN          shift and go to state 112
    NAME            shift and go to state 111
    PRINT           shift and go to state 4
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 104

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 113


state 105

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN . LACCOLADE bloc RACCOLADE

    LACCOLADE       shift and go to state 114


state 106

    (15) statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 15 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 15 (statement -> FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE .)


state 107

    (16) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON . RACCOLADE
    (20) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 115
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 116
    statement                      shift and go to state 3

state 108

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression . SEMICOLON RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression . SEMICOLON bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 117
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 109

    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT . expression SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT . expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 118
    callValue                      shift and go to state 26

state 110

    (17) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression . SEMICOLON RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression . SEMICOLON bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 119
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 111

    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME . AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME . AFFECT expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME . AFFECT expression
    (28) statement -> NAME . LPAREN RPAREN
    (29) statement -> NAME . LPAREN multiExpr RPAREN

    AFFECT          shift and go to state 120
    LPAREN          shift and go to state 15


state 112

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN . expression SEMICOLON RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN . expression SEMICOLON bloc RACCOLADE
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 121
    callValue                      shift and go to state 26

state 113

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 122
    statement                      shift and go to state 3

state 114

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 123

state 115

    (16) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 16 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 16 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE .)


state 116

    (20) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 124
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 117

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON . RACCOLADE
    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 126
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 125
    statement                      shift and go to state 3

state 118

    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression . SEMICOLON RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression . SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 127
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50

  ! SEMICOLON       [ reduce using rule 5 (statement -> NAME AFFECT expression .) ]


state 119

    (17) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON . RACCOLADE
    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 128
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 129
    statement                      shift and go to state 3

state 120

    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT . expression SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT . expression SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT . expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression INF expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression EQUALS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . NUMBER
    (43) expression -> . callValue
    (44) expression -> . NAME
    (45) expression -> . GUILLEMET NAME GUILLEMET
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (30) callValue -> . NAME LPAREN RPAREN
    (31) callValue -> . NAME LPAREN multiExpr RPAREN

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 27
    GUILLEMET       shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 130
    callValue                      shift and go to state 26

state 121

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression . SEMICOLON RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression . SEMICOLON bloc RACCOLADE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

    SEMICOLON       shift and go to state 131
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50


state 122

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 132
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 123

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 133
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 124

    (20) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 20 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 20 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE .)


state 125

    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 134
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 126

    (18) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 18 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 18 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)


state 127

    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON . RACCOLADE
    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 135
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 136
    statement                      shift and go to state 3

state 128

    (17) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 17 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 17 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE .)


state 129

    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 137
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 130

    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression . SEMICOLON RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression . SEMICOLON bloc RACCOLADE
    (5) statement -> NAME AFFECT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . INF expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . EQUALS expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 138
    PLUS            shift and go to state 42
    TIMES           shift and go to state 43
    MINUS           shift and go to state 44
    DIVIDE          shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    INF             shift and go to state 48
    SUP             shift and go to state 49
    EQUALS          shift and go to state 50

  ! SEMICOLON       [ reduce using rule 5 (statement -> NAME AFFECT expression .) ]


state 131

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON . RACCOLADE
    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 140
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 139
    statement                      shift and go to state 3

state 132

    (7) statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 7 (statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE .)


state 133

    (9) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .

    SEMICOLON       reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE .)


state 134

    (22) statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 22 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 22 (statement -> FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE .)


state 135

    (26) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 26 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 26 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE .)


state 136

    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 141
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 137

    (21) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 21 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 21 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE .)


state 138

    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON . RACCOLADE
    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON . bloc RACCOLADE
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 143
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    bloc                           shift and go to state 142
    statement                      shift and go to state 3

state 139

    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 144
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 140

    (19) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 19 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 19 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE .)


state 141

    (27) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 27 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 27 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE .)


state 142

    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc . RACCOLADE
    (2) bloc -> bloc . statement SEMICOLON
    (4) statement -> . PRINT LPAREN multiExpr RPAREN
    (5) statement -> . NAME AFFECT expression
    (6) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (7) statement -> . IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE ELSE LACCOLADE bloc RACCOLADE
    (8) statement -> . WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE
    (9) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE
    (14) statement -> . FUNCTIONVOID NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE
    (15) statement -> . FUNCTIONVOID NAME LPAREN multiname RPAREN LACCOLADE bloc RACCOLADE
    (16) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (17) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON RACCOLADE
    (18) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (19) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON RACCOLADE
    (20) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (21) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE RETURN expression SEMICOLON bloc RACCOLADE
    (22) statement -> . FUNCTIONVALUE NAME LPAREN RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (23) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE
    (24) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE
    (25) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (26) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON RACCOLADE
    (27) statement -> . FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE NAME AFFECT expression SEMICOLON bloc RACCOLADE
    (28) statement -> . NAME LPAREN RPAREN
    (29) statement -> . NAME LPAREN multiExpr RPAREN

    RACCOLADE       shift and go to state 145
    PRINT           shift and go to state 4
    NAME            shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTIONVOID    shift and go to state 9
    FUNCTIONVALUE   shift and go to state 10

    statement                      shift and go to state 11

state 143

    (24) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE .

    SEMICOLON       reduce using rule 24 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE .)
    RPAREN          reduce using rule 24 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON RACCOLADE .)


state 144

    (23) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 23 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 23 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc RETURN expression SEMICOLON bloc RACCOLADE .)


state 145

    (25) statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE .

    SEMICOLON       reduce using rule 25 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE .)
    RPAREN          reduce using rule 25 (statement -> FUNCTIONVALUE NAME LPAREN multiname RPAREN LACCOLADE bloc NAME AFFECT expression SEMICOLON bloc RACCOLADE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for INF in state 68 resolved as shift
WARNING: shift/reduce conflict for SUP in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for INF in state 69 resolved as shift
WARNING: shift/reduce conflict for SUP in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for INF in state 70 resolved as shift
WARNING: shift/reduce conflict for SUP in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for INF in state 71 resolved as shift
WARNING: shift/reduce conflict for SUP in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for INF in state 72 resolved as shift
WARNING: shift/reduce conflict for SUP in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 118 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 130 resolved as shift
