
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEAFFECT AND DECFUNC DIVIDE EQUALS FALSE FOR IF INF LACCOLADE LPAREN MINUS NAME NUMBER OR PLUS PRINT RACCOLADE RPAREN SEMICOLON SUP TIMES TRUE WHILEstart : blocbloc : bloc statement SEMICOLON \n    | statement SEMICOLONstatement : PRINT LPAREN expression RPARENstatement : NAME AFFECT expressionstatement : IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADEstatement : WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADEstatement : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADEstatement : NAME LPAREN RPAREN LACCOLADE bloc RACCOLADEstatement : NAME LPAREN RPARENexpression : expression PLUS expressionexpression : expression TIMES expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expression expression : expression AND expression  \n    | expression OR expression expression : expression INF expression\n\t\t\t\t| expression SUP expressionexpression : expression EQUALS expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEexpression : TRUEexpression : FALSE'
    
_lr_action_items = {'PRINT':([0,2,10,16,17,40,54,55,56,59,60,61,66,67,],[4,4,-3,4,-2,4,4,4,4,4,4,4,4,4,]),'NAME':([0,2,10,11,12,14,15,16,17,18,31,32,33,34,35,36,37,38,39,40,43,54,55,56,59,60,61,66,67,],[5,5,-3,21,21,21,21,5,-2,21,21,21,21,21,21,21,21,21,21,5,21,5,5,5,5,5,5,5,5,]),'IF':([0,2,10,16,17,40,54,55,56,59,60,61,66,67,],[6,6,-3,6,-2,6,6,6,6,6,6,6,6,6,]),'WHILE':([0,2,10,16,17,40,54,55,56,59,60,61,66,67,],[7,7,-3,7,-2,7,7,7,7,7,7,7,7,7,]),'FOR':([0,2,10,16,17,40,54,55,56,59,60,61,66,67,],[8,8,-3,8,-2,8,8,8,8,8,8,8,8,8,]),'$end':([1,2,10,17,],[0,-1,-3,-2,]),'SEMICOLON':([3,9,20,21,22,23,24,25,28,30,44,45,46,47,48,49,50,51,52,53,57,58,62,63,68,],[10,17,-21,-22,-23,-24,-5,-10,43,-4,-20,-11,-12,-13,-14,-15,-16,-17,-18,-19,61,-9,-6,-7,-8,]),'LPAREN':([4,5,6,7,8,11,12,14,15,18,31,32,33,34,35,36,37,38,39,43,],[11,13,14,15,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'AFFECT':([5,],[12,]),'RACCOLADE':([10,17,54,59,60,67,],[-3,-2,58,62,63,68,]),'NUMBER':([11,12,14,15,18,31,32,33,34,35,36,37,38,39,43,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'TRUE':([11,12,14,15,18,31,32,33,34,35,36,37,38,39,43,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FALSE':([11,12,14,15,18,31,32,33,34,35,36,37,38,39,43,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'RPAREN':([13,19,20,21,22,23,24,25,26,27,29,30,44,45,46,47,48,49,50,51,52,53,58,62,63,64,68,],[25,30,-21,-22,-23,-24,-5,-10,41,42,44,-4,-20,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-6,-7,65,-8,]),'PLUS':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[31,-21,-22,-23,-24,31,31,31,31,-20,-11,-12,-13,-14,31,31,31,31,31,31,]),'TIMES':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[32,-21,-22,-23,-24,32,32,32,32,-20,32,-12,32,-14,32,32,32,32,32,32,]),'MINUS':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[33,-21,-22,-23,-24,33,33,33,33,-20,-11,-12,-13,-14,33,33,33,33,33,33,]),'DIVIDE':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[34,-21,-22,-23,-24,34,34,34,34,-20,34,-12,34,-14,34,34,34,34,34,34,]),'AND':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[35,-21,-22,-23,-24,35,35,35,35,-20,-11,-12,-13,-14,35,35,35,35,35,35,]),'OR':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[36,-21,-22,-23,-24,36,36,36,36,-20,-11,-12,-13,-14,36,36,36,36,36,36,]),'INF':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[37,-21,-22,-23,-24,37,37,37,37,-20,-11,-12,-13,-14,37,37,37,37,37,37,]),'SUP':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[38,-21,-22,-23,-24,38,38,38,38,-20,-11,-12,-13,-14,38,38,38,38,38,38,]),'EQUALS':([19,20,21,22,23,24,26,27,29,44,45,46,47,48,49,50,51,52,53,57,],[39,-21,-22,-23,-24,39,39,39,39,-20,-11,-12,-13,-14,39,39,39,39,39,39,]),'LACCOLADE':([25,41,42,65,],[40,55,56,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,40,55,56,66,],[2,54,59,60,67,]),'statement':([0,2,16,40,54,55,56,59,60,61,66,67,],[3,9,28,3,9,3,3,9,9,64,3,9,]),'expression':([11,12,14,15,18,31,32,33,34,35,36,37,38,39,43,],[19,24,26,27,29,45,46,47,48,49,50,51,52,53,57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcBase.py',85),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','calcBase.py',93),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','calcBase.py',94),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_print','calcBase.py',102),
  ('statement -> NAME AFFECT expression','statement',3,'p_affect','calcBase.py',108),
  ('statement -> IF LPAREN expression RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_condition_if','calcBase.py',112),
  ('statement -> WHILE LPAREN expression RPAREN LACCOLADE bloc RACCOLADE','statement',7,'p_boucle_while','calcBase.py',116),
  ('statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOLADE bloc RACCOLADE','statement',11,'p_boucle_for','calcBase.py',120),
  ('statement -> NAME LPAREN RPAREN LACCOLADE bloc RACCOLADE','statement',6,'p_function','calcBase.py',124),
  ('statement -> NAME LPAREN RPAREN','statement',3,'p_call_func','calcBase.py',128),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_plus','calcBase.py',133),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_times','calcBase.py',137),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',141),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',142),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','calcBase.py',149),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','calcBase.py',150),
  ('expression -> expression INF expression','expression',3,'p_expression_binop_comparison','calcBase.py',157),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop_comparison','calcBase.py',158),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop_equals','calcBase.py',165),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',170),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',174),
  ('expression -> NAME','expression',1,'p_expression_name','calcBase.py',178),
  ('expression -> TRUE','expression',1,'p_expression_true','calcBase.py',182),
  ('expression -> FALSE','expression',1,'p_expression_false','calcBase.py',186),
]
